name: CI

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality checks (lint, vet, test, coverage)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Go env
        run: |
          go env
        shell: bash

      - name: Download modules
        run: go mod download

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: >
            --timeout=5m
            --out-format=colored-line-number
            ./...

      - name: Format check (gofmt)
        run: |
          fmt_out="$(gofmt -s -l .)"
          if [ -n "$fmt_out" ]; then
            echo "The following files are not gofmt-ed:"
            echo "$fmt_out"
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: Static analysis (staticcheck)
        uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: "2024.1.1"
          install-go: false

      - name: Tests with coverage
        run: |
          mkdir -p coverage
          go test ./... -race -covermode=atomic -coverprofile=coverage/coverage.out
          go tool cover -func=coverage/coverage.out | tee coverage/summary.txt

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
          if-no-files-found: error
